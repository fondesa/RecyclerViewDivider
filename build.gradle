/*
 * Copyright (c) 2020 Giorgio Antonioli
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    apply from: rootProject.file("build-tools/repositories.gradle"), to: buildscript

    dependencies {
        classpath libs.android.gp.impl
        classpath libs.dokka.gp
        classpath libs.gitHubRelease.gp
        classpath libs.kotlin.gp
        classpath libs.ktlint.gp
        classpath libs.recyclerViewDivider.buildTools
    }
}

allprojects {
    apply from: rootProject.file("build-tools/repositories.gradle")
    // Adds the version of this library to all the projects, including the root project.
    apply plugin: "recycler-view-divider-version"
}

apply plugin: "com.github.breadmoirai.github-release"

// The release assets will be configured through recycler-view-divider-deploy.
githubRelease {
    owner "fondesa"
    repo "recycler-view-divider"
    targetCommitish "master"
    tagName version
    releaseName "RecyclerViewDivider $version"
    body "TBD"
    draft true
}
def gitHubToken = project.properties["github.token"] ?: System.getenv("GITHUB_TOKEN")
if (gitHubToken != null) {
    githubRelease.token = gitHubToken
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

// Use "all" as the default distribution-type of the Gradle Wrapper.
wrapper.distributionType = Wrapper.DistributionType.ALL
